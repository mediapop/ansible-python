language: generic
sudo: required

services:
  - docker

env:
  global:
    - ANSIBLE_ROLE=python DISTRIBUTION=ubuntu
  jobs:
    - VERSION=focal
    - VERSION=bionic
    - VERSION=xenial

before_install:
  - 'sudo docker pull ${DISTRIBUTION}:${VERSION}'
  - 'sudo docker build --no-cache --rm --file=test/Dockerfile.${DISTRIBUTION}-${VERSION} --tag=${DISTRIBUTION}-${VERSION}:ansible test'

script:
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/${ANSIBLE_ROLE}:ro ${DISTRIBUTION}-${VERSION}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/${ANSIBLE_ROLE}/test/test.yml --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/${ANSIBLE_ROLE}/test/test.yml'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/${ANSIBLE_ROLE}/test/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'

notifications:
    webhooks: https://galaxy.ansible.com/api/v1/notifications/
